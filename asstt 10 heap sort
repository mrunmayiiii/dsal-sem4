#include<bits/stdc++.h>
#include<iostream>
using namespace std;

class heap1 {
public:
    int size;
    int arr[100];

    heap1() {
        size = 0;
    }

    void insert(int val) {
        size++;
        int index = size;
        arr[index] = val;

        while (index > 1) {
            int parent = index / 2;
            if (arr[parent] > arr[index]) {
                swap(arr[parent], arr[index]);
                index = parent;
            } else {
                return;
            }
        }
    }

    void print() {
        for (int i = 1; i <= size; i++) {
            cout << arr[i] << " ";
        }
    }

    void delete1() {
        if (size == 0) {
            cout << "nothing to delete" << endl;
            return;
        }

        cout << arr[1] << " ";
        arr[1] = arr[size];
        size--;

        int i = 1;
        while (i * 2 <= size) {  
            int leftind = 2 * i;
            int rightind = 2 * i + 1;

            if (rightind <= size && arr[rightind] < arr[leftind] && arr[i] > arr[rightind]) {
                swap(arr[i], arr[rightind]);
                i = rightind;
            } else if (arr[i] > arr[leftind]) {
                swap(arr[i], arr[leftind]);
                i = leftind;
            } else {
                return;
            }
        }
    }
};

int main() {
    heap1 h;
    h.insert(99);
    h.insert(33);
    h.insert(56);
    h.insert(76);
    h.insert(22);
    h.insert(11);
    h.insert(5);
    h.print();
    cout << endl;

    cout << "sorted using heap sort : " << endl;
    while (h.size != 0) {
        h.delete1();
    }

    return 0;
}





// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;
class heapsort{
    public:
    void heapify(int*arr,int size,int index){
        int large=index;
        int left=2*index +1;
        int right=2*index +2;
        if(left<size && arr[large]<arr[left]){
            large=left;
        }
        if(right<size && arr[large]<arr[right]){
            large=right;
        }
        if(large!=index){
            swap(arr[large],arr[index]);
            heapify(arr,size,large);
        }
        
    }
    void heapsort1(int *arr,int size){
        //make heap
        for(int i=(size/2)-1;i>=0;i--){
            heapify(arr,size,i);
        }
        
        //sort heap
        for(int i=size-1;i>=0;i--){
            swap(arr[0],arr[i]);
            heapify(arr,i,0);
        }
        
    }
    
};

int main() {
    heapsort obj;
    int* array;
    int size;

    cout << "Enter size of array:- ";
    cin >> size;
    array = new int[size];

    cout << "Enter elements of array:- ";
    for(int i=0; i<size; i++) cin >> array[i];
    cout << endl;

    cout << "Unsorted array:- ";
    for(int i=0; i<size; i++) cout << array[i] << "  ";
    cout << endl;

    obj.heapsort1(array, size);
    cout << "Sorted array:-   ";
    for(int i=0; i<size; i++) cout << array[i] << "  ";
    cout << endl;

    delete [] array;
    return 0;
}
